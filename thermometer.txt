Html code for css 


html {
  background: #95b6d9;
  /* Old browsers */
  background: -moz-radial-gradient(45% 450px, ellipse cover, #95b6d9 0%, #1d405e 100%);
  /* FF3.6+ */
  background: -webkit-gradient(radial, 45% 450px, 0px, center center, 100%, color-stop(0%, #95b6d9), color-stop(100%, #1d405e));
  /* Chrome,Safari4+ */
  background: -webkit-radial-gradient(45% 450px, ellipse cover, #95b6d9 0%, #1d405e 100%);
  /* Chrome10+,Safari5.1+ */
  background: -o-radial-gradient(45% 450px, ellipse cover, #95b6d9 0%, #1d405e 100%);
  /* Opera 12+ */
  background: -ms-radial-gradient(45% 450px, ellipse cover, #95b6d9 0%, #1d405e 100%);
  /* IE10+ */
  background: radial-gradient(ellipse at 45% 450px, #95b6d9 0%, #1d405e 100%);
  /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#95b6d9', endColorstr='#1d405e', GradientType=1);
  /* IE6-9 fallback on horizontal gradient */
  padding-top: 20px;
  min-height: 100%;
}

/* Base thermometer style */
#thermometer {
  margin-left: auto;
  margin-right: auto;
  padding-top: 42px;
  /* So fill will only reach so far up themometer */
  width: 146px;
  height: 430px;
  /* Size of background image */
  background-image: url('//taylor-made.webs.com/files_online/base.png');
  background-repeat: no-repeat;
  position: relative;
}


/* let's position the goal */
#thermometer .goal {
  position: absolute;
  top: 0;
  /* Place goal above themometer */
  left: -20px;
  /* Takes centre to be above the themometer */
  width: 100%;
  /* So text-align works to center text */
  font-family: Trebuchet MS;
  font-weight: bold;
  color: #282828;
  text-align: center;
}


/* Container for  fill and amount divs */
#thermometer .progress {
  position: relative;
  height: 338px;
  /* Number of pixels from 0% up to 100% on base thermometer */
  left: 40px;
  /* Moves fill on top of base thermometer */
}


/* This represents the fill of the thermometer (the mercury, if you will) */
#thermometer .fill {
  background-image: url('//taylor-made.webs.com/files_online/fill.png');
  background-repeat: repeat-y;
  width: 21px;
  /* Size of bg image */
  height: 0;
  /* Start at 0, this will be animated */
  position: absolute;
  bottom: 0;
  /* Keeps fill at bottom so we animate from bottom upward */
}


/* Current amount dispalyed */
#thermometer .progress .amount {
  font-family: Trebuchet MS;
  font-weight: bold;
  color: #086008;
  background-image: url('//taylor-made.webs.com/files_online/arrow.png');
  background-repeat: no-repeat;
  background-position: 28px;
  /* Move to right of thermometer */
  height: 26px;
  /* Size of background image */
  position: absolute;
  bottom: -13px;
  /* 26/2=13. Get image to point at current level, this will be animated */
  padding-left: 60px;
  /* Keep text to right of arrow */
}

/* end of fundraising thermometer */

/* fundraising thermometer */

/*Basic reset*/
* {
  margin: 0;
  padding: 0;
}














JS

// fundraising thermometer 



// Utility function for formatting number as currency
function formatCurrency(num) {
  var sign, integer, placesTilFirstSep;
  sign = num < 0 ? "-" : "";
  num = Math.abs(+num || 0);
  integer = parseInt(num, 10) + "";
  placesTilFirstSep = integer.length > 3 ? integer.length % 3 : 0;
  return sign + "\u00A3" + (placesTilFirstSep ? integer.substr(0, placesTilFirstSep) + "," : "") + integer.substr(placesTilFirstSep).replace(/(\d{3})(?=\d)/g, "$1,") + "." + Math.abs(num - integer).toFixed(2).slice(2)
}
// Utility function for parsing number from currency
function parseFromCurrency(curr) {
  curr = curr.replace(/\s/g, "");
  if(isNaN(curr.charAt(0)))
    curr  = curr.slice(1);
  return parseFloat(curr.replace(/,/g, ""));
}

// Main functionality
function thermometer(goal, current, animate) {
  if(goal && !current){
    current = goal;
    goal = undefined;
  }
  var $thermo = $("#thermometer"),
      $goal = $(".goal", $thermo),
      $progress = $(".progress", $thermo),
      $fill = $(".fill", $progress),
      $amount = $progress.find(".amount"),
      percentage;
  goal = goal || parseFromCurrency($goal.text()),
  current = current || parseFromCurrency($amount.text()),
  percentage = Math.min(Math.round(current / goal * 1000) / 10, 100);
  $goal.text(formatCurrency(goal));
  if($amount.text() == current) {
    $amount.text(formatCurrency(0))
  }
  if(animate !== false) {
    $fill.animate({
      height: percentage + "%"
    }, {
      duration: 1200
    });
    $amount.animate({
      bottom: percentage - (13 / 338) * 100 + "%"
    }, {
      duration: 1200
    });
    var amountDisplayed = {
      amountNum: parseFromCurrency($amount.text())
    };
    $(amountDisplayed).animate({
      amountNum: current
    }, {
      duration: 1200,
      easing: "swing",
      step: function () {
        $amount.text(formatCurrency(this.amountNum))
      },
      complete: function () {
        if(current < goal) {
          $amount.text(formatCurrency(current))
        } else {
          $amount.text(formatCurrency(current) + "!!");
          $amount.css({
            color: "#FF6600",
            "text-shadow": "0 0 10px #FF9933"
          });
          new Audio("http://soundbible.com/mp3/Kids%20Cheering-SoundBible.com-681813822.mp3").play()
        }
      }
    })
  } else {
    $fill.css({
      height: percentage + "%"
    });
    $amount.css({
      bottom: percentage + "%"
    })
  }
}

$(document).ready(function () {
  thermometer();
  
  // Just to test our animation, lets have it change randomly each time we click
  $(window).click(function () {
    if($(".progress").find(".amount").is(":animated")) {
      return
    } else {
      var random = Math.random() * parseFromCurrency($("#thermometer .goal").text());
      thermometer(random)
    }
  })
});

// end of thermometer 




